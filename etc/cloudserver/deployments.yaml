apiVersion: apps/v1
kind: Deployment
metadata:
  name: cloudserver
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cloudserver
  template:
    metadata:
      labels:
        app: cloudserver
    spec:
      containers:
        - name: cloudserver
          image: zenko/cloudserver:latest-7.70.10
          imagePullPolicy: Always
          env:
            - name: S3DATA
              value: "multiple"
            - name: REMOTE_MANAGEMENT_DISABLE
              value: "true"
            - name: SCALITY_ACCESS_KEY_ID
              value: "${ACCESS_KEY}"
            - name: SCALITY_SECRET_ACCESS_KEY
              value: "${SECRET_KEY}"
            - name: ENDPOINT
              value: "${STACK_HOSTNAME}"
          ports:
            - name: http
              containerPort: 8000
          volumeMounts:
            - name: data-volume
              mountPath: /usr/src/app/localData
            - name: metadata-volume
              mountPath: /usr/src/app/localMetadata
      volumes:
        - name: data-volume
          persistentVolumeClaim:
            claimName: data-claim
        - name: metadata-volume
          persistentVolumeClaim:
            claimName: metadata-claim
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx
  namespace: ${NAMESPACE}
spec:
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:alpine3.20
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          volumeMounts:
            - name: nginx-settings
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: default.conf
            - name: nginx-tls-certificate
              mountPath: /etc/tls/certs/fullchain.pem
              subPath: fullchain.pem
            - name: nginx-tls-certificate-key
              mountPath: /etc/tls/private/privkey.pem
              subPath: privkey.pem
      volumes:
        - name: nginx-settings
          configMap:
            name: nginx-settings
        - name: nginx-tls-certificate
          configMap:
            name: nginx-tls-certificate
        - name: nginx-tls-certificate-key
          configMap:
            name: nginx-tls-certificate-key
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
  namespace: ${NAMESPACE}
  labels:
    app: kafka-broker
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      restartPolicy: Always
      containers:
        - name: kafka-broker
          image: bitnami/kafka:3.7.0
          imagePullPolicy: Always
          env:
            - name: KAFKA_CFG_ZOOKEEPER_CONNECT
              value: "zookeeper:2181"
          ports:
            - containerPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper
  namespace: ${NAMESPACE}
  labels:
    app: zookeeper
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      restartPolicy: Always
      containers:
        - name: zookeeper
          image: bitnami/zookeeper:3.8.4
          imagePullPolicy: Always
          env:
            - name: ALLOW_ANONYMOUS_LOGIN
              value: "yes"
          ports:
            - containerPort: 2181